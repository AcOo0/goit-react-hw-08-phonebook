{"version":3,"file":"static/js/509.38c40dda.chunk.js","mappings":"4PACA,EAAuB,8BAAvB,EAAoE,sCAApE,EAAkH,+BAAlH,EAAuJ,6B,UCOjJA,EAAgB,CAClBC,SAAU,GACVC,OAAQ,GACRC,KAAM,GACNC,OAAQ,IAmEZ,EAhEsB,WAClB,IAAAC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIP,IAAgBQ,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MAMXC,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACZb,EAAgBa,EAAhBb,KAAMc,EAAUD,EAAVC,MACdN,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACHG,GAAK,IAAAQ,EAAAA,EAAAA,GAAA,GACPf,EAAOc,IAEhB,EAQME,EAAQ,WACVR,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAClB,EAGMoB,GAAgBC,EAAAA,EAAAA,MAChBC,GAAiBD,EAAAA,EAAAA,MAEflB,EAAiBO,EAAjBP,KAAMC,EAAWM,EAAXN,OAEd,OACImB,EAAAA,EAAAA,MAAA,QAAMC,SAjBW,SAACC,GAZD,IAACC,EAalBD,EAAEE,iBAbgBD,GAcNnB,EAAAA,EAAAA,GAAC,CAAC,EAAIG,GAblBE,GAASgB,EAAAA,EAAAA,IAAWF,IAchBP,GACR,EAakCU,UAAWC,EAAYC,SAAA,EACjDR,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAoBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOC,QAASb,EAAcW,SAAC,UAC/BC,EAAAA,EAAAA,KAAA,SACIf,MAAOd,EACP+B,SAAUpB,EACVqB,GAAIf,EACJS,UAAWC,EACX3B,KAAK,OACLiC,UAAQ,EACRC,KAAK,OACLC,YAAY,aAEpBf,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAoBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOC,QAASX,EAAeS,SAAC,WAChCC,EAAAA,EAAAA,KAAA,SACIf,MAAOb,EACP8B,SAAUpB,EACVqB,GAAIb,EACJO,UAAWC,EACX3B,KAAK,SACLiC,UAAQ,EACRG,QAAQ,wBACRF,KAAK,MACLC,YAAY,cAEpBN,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAYO,KAAK,SAAQN,SAAC,kBAGzD,E,UC7EaS,EAAe,SAAAC,GAAK,OAAIA,EAAMvC,MAAO,ECKrCwC,EAAiB,SAAAD,GAAK,OAAIA,EAAMxC,QAAS,EAEzC0C,GAAyBC,EAAAA,EAAAA,IAClC,CAL6B,SAAAH,GAAK,OAAIA,EAAMxC,SAAS4C,KAAM,EAKvCL,IACpB,SAACK,EAAO3C,GACJ,IAAKA,EACD,OAAO2C,EAGX,IAAMC,EAAmB5C,EAAO6C,cAOhC,OALyBF,EAAM3C,QAAO,SAAAa,GAAuB,IAApBZ,EAAIY,EAAJZ,KAAMC,EAAMW,EAANX,OAG3C,OAFuBD,EAAK4C,cAELC,SAASF,IAAqB1C,EAAO4C,SAASF,EACzE,GAEJ,I,UCrBJ,EAAsB,6BAAtB,EAAiG,8BC+CjG,EArCsB,WAClB,IAAMD,GAAQI,EAAAA,EAAAA,IAAYN,GAC1BO,GAA6BD,EAAAA,EAAAA,IAAYP,GAAjCS,EAASD,EAATC,UAAWC,EAAKF,EAALE,MACbxC,GAAWC,EAAAA,EAAAA,OAEjBwC,EAAAA,EAAAA,YAAU,WACNzC,GAAS0C,EAAAA,EAAAA,MACb,GAAG,CAAC1C,IAEJ,IAIM2C,EAAWV,EAAMW,KAAI,SAAAzC,GAAA,IAAGoB,EAAEpB,EAAFoB,GAAIhC,EAAIY,EAAJZ,KAAMC,EAAMW,EAANX,OAAM,OACtCmB,EAAAA,EAAAA,MAAA,MACIM,UAAWC,EAAYC,SAAA,CAGtB5B,EAAK,KAAGC,GACT4B,EAAAA,EAAAA,KAAA,UACIyB,QAAS,kBAXD,SAACtB,GACrBvB,GAAS8C,EAAAA,EAAAA,IAAcvB,GAC3B,CAS+BwB,CAAgBxB,EAAG,EAClCN,UAAWC,EACXO,KAAK,SAAQN,SAAC,aANbI,EASJ,IAGb,OACIZ,EAAAA,EAAAA,MAAA,MAAAQ,SAAA,CACKoB,IAAanB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,IACpBR,IAASpB,EAAAA,EAAAA,KAAA,KAAAD,SAAIqB,IACbG,IAGb,E,UC7CA,EAAgC,8BAAhC,EAA2E,2BC0B3E,EApBe,WAEX,IAAM3C,GAAWC,EAAAA,EAAAA,MACXX,GAAS+C,EAAAA,EAAAA,IAAYT,GAI3B,OAAQjB,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAA9B,SAAA,EACJC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAqBC,SAAC,2BACpCC,EAAAA,EAAAA,KAAA,SACIK,KAAK,OACLpB,MAAOf,EACPgC,SAPa,SAAHnB,GAAA,IAAMC,EAAMD,EAANC,OAAM,OAAOJ,GAASkD,EAAAA,EAAAA,GAAU9C,EAAOC,OAAQ,EAQ/DY,UAAWC,EACX3B,KAAK,SACLmC,YAAY,aAGxB,ECxBA,EAA0B,6BAA1B,EAAqE,iCCoBrE,EAfmB,WAEf,OACIf,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAeC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAC+B,EAAa,KACdxC,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACgC,EAAM,KACPhC,EAAAA,EAAAA,KAACiC,EAAa,SAI9B,ECRA,EAToB,WAChB,OACIjC,EAAAA,EAAAA,KAAA,OAAAD,UAEIC,EAAAA,EAAAA,KAACkC,EAAU,KAGvB,C","sources":["webpack://react-homework-template/./src/components/MyContacts/MyContactForm/my-contact-form.module.css?3138","components/MyContacts/MyContactForm/MyContactForm.jsx","redux/filter/filter-selectors.js","redux/contacts/constants-selectors.js","webpack://react-homework-template/./src/components/MyContacts/MyContactList/my-contact-list.module.css?18df","components/MyContacts/MyContactList/MyContactList.jsx","webpack://react-homework-template/./src/components/MyContacts/Filter/filter.module.css?8cfb","components/MyContacts/Filter/Filter.jsx","webpack://react-homework-template/./src/components/MyContacts/my-contacts.module.css?4f12","components/MyContacts/MyContacts.jsx","pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"my-contact-form_form__Rqz2n\",\"formElements\":\"my-contact-form_formElements__q7l3v\",\"input\":\"my-contact-form_input__58jjR\",\"btn\":\"my-contact-form_btn__UwrB0\"};","import { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from \"nanoid\";\n\nimport { addContact } from \"../../../redux/contacts/contacts-operations.js\";\n\nimport styles from './my-contact-form.module.css'\n\nconst INITIAL_STATE = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: ''\n};\n\nconst MyContactForm = () => {\n    const [state, setState] = useState({ ...INITIAL_STATE });\n    const dispatch = useDispatch();\n\n    const onAddContact = (data) => {\n        dispatch(addContact(data));\n    };\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onAddContact({ ...state });\n            reset();\n    };\n\n    const reset = () => {\n        setState({ ...INITIAL_STATE });\n    };\n\n    \n    const contactNameId = nanoid();\n    const contactPhoneId = nanoid();\n    \n    const { name, number } = state;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <div className={styles.formElements}>\n                <label htmlFor={contactNameId}>Name</label>\n                <input\n                    value={name}\n                    onChange={handleChange}\n                    id={contactNameId}\n                    className={styles.input}\n                    name=\"name\"\n                    required\n                    type=\"text\"\n                    placeholder=\"Name\" />\n            </div>\n            <div className={styles.formElements}>\n                <label htmlFor={contactPhoneId}>Phone</label>\n                <input\n                    value={number}\n                    onChange={handleChange}\n                    id={contactPhoneId}\n                    className={styles.input}\n                    name=\"number\"\n                    required\n                    pattern=\"^[+0-9\\-\\(\\)\\s]+$\"\n                    type=\"tel\"\n                    placeholder=\"Phone\" />\n            </div>\n            <button className={styles.btn} type=\"submit\">Add contact</button>\n        </form>\n    );\n}\n\nexport default MyContactForm;","export const selectFilter = store => store.filter;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"../filter/filter-selectors\";\n\nexport const selectAllContacts = store => store.contacts.items;\n\nexport const selectContacts = store => store.contacts;\n\nexport const selectFilteredContacts = createSelector(\n    [selectAllContacts, selectFilter],\n    (items, filter) => {\n        if (!filter) {\n            return items;\n        }\n\n        const normalizedFilter = filter.toLowerCase();\n\n        const filteredContacts = items.filter(({ name, number }) => {\n            const normalizedName = name.toLowerCase();\n\n            return (normalizedName.includes(normalizedFilter) || number.includes(normalizedFilter))\n        })\n        return filteredContacts\n    }\n);","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"my-contact-list_btn__XP1KU\",\"input\":\"my-contact-list_input__6p3S-\",\"list\":\"my-contact-list_list__v30K-\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts, deleteContact } from \"../../../redux/contacts/contacts-operations\";\n\nimport { selectContacts, selectFilteredContacts } from '../../../redux/contacts/constants-selectors';\n\nimport { Loader } from '../../Loader/Loader';\n\nimport styles from \"./my-contact-list.module.css\"\n\nconst MyContactList = () => {\n    const items = useSelector(selectFilteredContacts);\n    const { isLoading, error } = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const onDeleteContact = (id) => {\n        dispatch(deleteContact(id));\n    };\n\n    const elements = items.map(({ id, name, number }) => \n            <li\n                className={styles.list}\n                key={id}\n            >\n                {name}: {number}\n                <button\n                    onClick={() => onDeleteContact(id)}\n                    className={styles.btn}\n                    type=\"button\">\n                    Delete\n                </button>\n            </li>\n        )\n\n    return (\n        <ul>\n            {isLoading && <Loader/>}\n            {error && <p>{error}</p>}\n            {elements}\n        </ul>\n    );\n};\n\nexport default MyContactList;","// extracted by mini-css-extract-plugin\nexport default {\"findInputText\":\"filter_findInputText__gkNIH\",\"serchInput\":\"filter_serchInput__c+Su+\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from '../../../redux/filter/filter-slice';\nimport { selectFilter } from '../../../redux/filter/filter-selectors';\n\nimport styles from './filter.module.css'\n\nconst Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    \n    const changeFilter = ({ target }) => dispatch(setFilter(target.value));\n\n    return (<>\n        <p className={styles.findInputText}>Find contacts by name</p>\n        <input\n            type='text'\n            value={filter}\n            onChange={changeFilter}\n            className={styles.serchInput}\n            name='filter'\n            placeholder='Search' />\n    </>\n    )\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"my-contacts_wrapper__b-SwW\",\"listwrapper\":\"my-contacts_listwrapper__YNk6H\"};","import MyContactForm from './MyContactForm/MyContactForm';\nimport MyContactList from './MyContactList/MyContactList';\nimport Filter from './Filter/Filter';\n\nimport styles from './my-contacts.module.css'\n\nconst MyContacts = () => {\n\n    return (\n        <div className={styles.wrapper}>\n            <h1>Phonebook</h1>\n            <MyContactForm />\n            <div className={styles.listwrapper}>\n                <h2>Contacts</h2>\n                <Filter />\n                <MyContactList />\n            </div>\n        </div>\n    );\n}\n\nexport default MyContacts;","import MyContacts from \"../../components/MyContacts/MyContacts\";\n\nconst MyBooksPage = ()=> {\n    return (\n        <div>\n            {/* <h1>My Contacts page</h1> */}\n            <MyContacts />\n        </div>\n    )\n}\n\nexport default MyBooksPage;"],"names":["INITIAL_STATE","contacts","filter","name","number","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","handleChange","_ref","target","value","_defineProperty","reset","contactNameId","nanoid","contactPhoneId","_jsxs","onSubmit","e","data","preventDefault","addContact","className","styles","children","_jsx","htmlFor","onChange","id","required","type","placeholder","pattern","selectFilter","store","selectContacts","selectFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","includes","useSelector","_useSelector","isLoading","error","useEffect","fetchContacts","elements","map","onClick","deleteContact","onDeleteContact","Loader","_Fragment","setFilter","MyContactForm","Filter","MyContactList","MyContacts"],"sourceRoot":""}